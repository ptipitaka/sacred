---
/**
 * Paragraph Component for Tipitaka paragraphs
 * Represents a numbered paragraph (e.g., 41., 42., 43.)
 */

export interface Props {
    number: string;
    book?: string; // Optional book identifier for PageFind metadata
    type?: 'normal' | 'center' | 'verses';
    pali?: boolean; // Enable Pali word-break protection (default: true)
}

const { number, book = "", type = "normal", pali = true } = Astro.props;

// Generate PageFind metadata
const metadataValue = book ? `para:${book}-${number}` : `para:${number}`;
const typeMetadata = `type:${type}`;
---

<div
    data-pagefind-meta={metadataValue}
    data-pagefind-meta-type={typeMetadata}
    class:list={[
        'paragraph-section',
        `paragraph-${type}`,
        { 'pali': pali }
    ]}
    data-paragraph={number}
    data-type={type}
>
    <span class="paragraph-number">{number}</span><span class="paragraph-content">
        {pali ? (
            <div class="pali-wrapper">
                <slot />
            </div>
        ) : (
            <slot />
        )}
    </span>
</div>



<style>
    /* ===== BASE STYLES ===== */
    .paragraph-section {
        margin: 1rem 0;
        line-height: 1.8;
        text-align: justify;
    }

    .paragraph-number {
        font-style: italic;
        color: #6b7280;
        font-size: 0.45em;
        opacity: 0.8;
        vertical-align: baseline;
        margin-right: 0.3em;
        vertical-align: sub;
    }

    .paragraph-content {
        color: var(--sl-color-text, #383838);
        font-size: var(--sl-text-body, 1rem);
        line-height: inherit;
        display: inline;
    }

    /* Pali content should allow normal text wrapping */
    .paragraph-section.pali .paragraph-content {
        display: inline; /* Keep inline but with different text flow */
        white-space: normal; /* Allow normal wrapping */
    }

    .paragraph-content :global(p) {
        margin: 0;
        display: inline;
    }

    .paragraph-content :global(p:first-child) {
        margin-top: 0;
    }

    .paragraph-content :global(p:last-child) {
        margin-bottom: 0;
    }

    /* ===== PARAGRAPH TYPE STYLES ===== */
    
    /* Normal type - default justify */
    .paragraph-normal,
    .paragraph-section {
        text-align: justify;
        text-indent: 5em;
    }

    .paragraph-normal .paragraph-content :global(p) {
        text-align: justify;
        margin: 0;
        display: inline;
    }

    /* Center type */
    .paragraph-center {
        text-align: center;
        line-height: 1.2em;
        text-indent: 0;
    }

    /* Verses type */
    .paragraph-verses {
        text-align: left;
        font-style: italic;
        line-height: 1.6;
        margin-left: 25%;
        text-indent: 30px;
    }

    .paragraph-verses .paragraph-content {
        white-space: pre-wrap !important; /* Preserve all whitespace including line breaks */
        display: block !important;
        margin-top: -30px;
    }

    .paragraph-verses .paragraph-content :global(*) {
        white-space: pre-wrap !important;
    }

    .paragraph-verses .paragraph-content :global(p) {
        margin: 0.25rem 0;
        display: block !important;
        white-space: pre-wrap !important;
    }

    /* ===== RESPONSIVE STYLES ===== */
    
    /* Mobile */
    @media (max-width: 640px) {
        .paragraph-section {
            margin: 0.75rem 0;
            gap: 0.25rem;
        }

        .paragraph-number {
            font-size: 0.7em;
        }

        .paragraph-content {
            font-size: var(--sl-text-sm, 0.875rem);
        }

        .paragraph-verses {
            margin-left: 25%;
        }
    }

    /* Print */
    @media print {
        .paragraph-section {
            margin: 0.5rem 0;
            break-inside: avoid;
        }

        .paragraph-number,
        .paragraph-content {
            color: #000;
        }

        .paragraph-verses {
            margin-left: 30%;
        }
    }

    /* ===== THEME STYLES ===== */
    
    /* Dark mode */
    :global([data-theme="dark"]) .paragraph-number {
        color: #9ca3af;
    }

    :global([data-theme="dark"]) .paragraph-content {
        color: var(--sl-color-text, #e5e7eb);
    }

    /* ===== PALI WORD-BREAK PROTECTION ===== */
    
    /* Use JavaScript-based word wrapping for 100% protection */
    .paragraph-section.pali .pali-wrapper {
        text-align: justify;
        text-align-last: left;
        text-justify: inter-word;
        line-height: 1.8;
        word-spacing: normal;
        display: inline;
        text-indent: 6.5em;
    }

    /* Global styles for Pali words (will be applied by JavaScript) */
    .paragraph-section.pali :global(.pali-word) {
        white-space: nowrap !important;
        word-break: keep-all !important;
    }

    /* ===== INTERACTION STYLES ===== */
    
    /* Focus */
    .paragraph-section:focus-within {
        outline: 2px solid var(--sl-color-accent, #007acc);
        outline-offset: 2px;
        border-radius: 0.25rem;
    }
</style>

{pali && (
    <script>
        // Client-side word wrapping for Pali text
        document.addEventListener('DOMContentLoaded', function() {
            const paliWrappers = document.querySelectorAll('.paragraph-section.pali .pali-wrapper');
            
            paliWrappers.forEach(wrapper => {
                const text = wrapper.textContent || '';
                const words = text.split(/(\s+)/);
                
                const wrappedHTML = words.map(part => {
                    if (part.trim()) {
                        return `<span class="pali-word">${part}</span>`;
                    }
                    return part; // Keep whitespace
                }).join('');
                
                wrapper.innerHTML = wrappedHTML;
            });
        });
    </script>
)}